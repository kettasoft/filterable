import{_ as s,c as e,a,o as i}from"./app-Cj092IKu.js";const t={};function l(r,n){return i(),e("div",null,n[0]||(n[0]=[a(`<h1 id="filterable-configuration-overview" tabindex="-1"><a class="header-anchor" href="#filterable-configuration-overview"><span>Filterable Configuration Overview</span></a></h1><hr><p>This configuration file controls how filters are registered, resolved, and applied throughout your Laravel application.</p><h2 id="_1-namespace-configuration" tabindex="-1"><a class="header-anchor" href="#_1-namespace-configuration"><span>1. Namespace Configuration</span></a></h2><div class="language-php line-numbers-mode" data-highlighter="prismjs" data-ext="php" data-title="php"><pre><code><span class="line"><span class="token string single-quoted-string">&#39;filter_namespace&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;App\\\\Http\\\\Filters\\\\&#39;</span><span class="token punctuation">,</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li><strong>Type</strong>: <code>string</code></li><li><strong>Default</strong>: <code>App\\Http\\Filters\\</code></li><li><strong>Description</strong>: Base namespace for model-specific filter classes. Used when auto-registering filters.</li></ul><h2 id="_2-auto-registration" tabindex="-1"><a class="header-anchor" href="#_2-auto-registration"><span>2. Auto Registration</span></a></h2><div class="language-php line-numbers-mode" data-highlighter="prismjs" data-ext="php" data-title="php"><pre><code><span class="line"><span class="token string single-quoted-string">&#39;auto_register_filters&#39;</span> <span class="token operator">=&gt;</span> <span class="token constant boolean">false</span><span class="token punctuation">,</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li><strong>Type</strong>: <code>boolean</code></li><li><strong>Default</strong>: <code>false</code></li><li><strong>Description</strong>: Enables automatic filter resolution using naming convention: ModelName → ModelNameFilter (e.g. Book model → BookFilter class).</li></ul><h2 id="_3-request-injection" tabindex="-1"><a class="header-anchor" href="#_3-request-injection"><span>3. Request Injection</span></a></h2><div class="language-php line-numbers-mode" data-highlighter="prismjs" data-ext="php" data-title="php"><pre><code><span class="line"><span class="token string single-quoted-string">&#39;auto_inject_request&#39;</span> <span class="token operator">=&gt;</span> <span class="token constant boolean">true</span><span class="token punctuation">,</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li><strong>Type</strong>: <code>boolean</code></li><li><strong>Default</strong>: <code>true</code></li><li><strong>Description</strong>: Automatically injects the current Request object into filters using Laravel’s service container.</li></ul><h2 id="_4-default-engine" tabindex="-1"><a class="header-anchor" href="#_4-default-engine"><span>4. Default Engine</span></a></h2><div class="language-php line-numbers-mode" data-highlighter="prismjs" data-ext="php" data-title="php"><pre><code><span class="line"><span class="token string single-quoted-string">&#39;default_engine&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;dynamic&#39;</span><span class="token punctuation">,</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li><strong>Type</strong>: <code>string</code></li><li><strong>Default</strong>: <code>dynamic</code></li><li><strong>Options</strong>: <code>dynamic</code>, <code>tree</code>, <code>ruleset</code>, <code>closure_pipeline</code>, <code>expression</code></li><li><strong>Description</strong>: Specifies default query builder engine for filter processing.</li></ul><h2 id="_5-filter-key" tabindex="-1"><a class="header-anchor" href="#_5-filter-key"><span>5. Filter Key</span></a></h2><div class="language-php line-numbers-mode" data-highlighter="prismjs" data-ext="php" data-title="php"><pre><code><span class="line"><span class="token string single-quoted-string">&#39;filter_key&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;filter&#39;</span><span class="token punctuation">,</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li><strong>Type</strong>: string</li><li><strong>Default</strong>: filter</li><li><strong>Description</strong>: Request parameter key containing filter data (e.g. <code>?filter[status]=active</code>).</li></ul><h2 id="_6-filter-engines" tabindex="-1"><a class="header-anchor" href="#_6-filter-engines"><span>6. Filter Engines</span></a></h2><h3 id="_6-1-dynamic-method-engine" tabindex="-1"><a class="header-anchor" href="#_6-1-dynamic-method-engine"><span>6.1 Dynamic Method Engine</span></a></h3><div class="language-php line-numbers-mode" data-highlighter="prismjs" data-ext="php" data-title="php"><pre><code><span class="line"><span class="token string single-quoted-string">&#39;dynamic&#39;</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span></span>
<span class="line">    <span class="token string single-quoted-string">&#39;options&#39;</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span></span>
<span class="line">        <span class="token string single-quoted-string">&#39;normalize_keys&#39;</span> <span class="token operator">=&gt;</span> <span class="token constant boolean">true</span></span>
<span class="line">    <span class="token punctuation">]</span></span>
<span class="line"><span class="token punctuation">]</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><strong>Normalize Keys</strong>: Convert field names to lowercase</li></ul><h3 id="_6-2-tree-engine" tabindex="-1"><a class="header-anchor" href="#_6-2-tree-engine"><span>6.2 Tree Engine</span></a></h3><div class="language-php line-numbers-mode" data-highlighter="prismjs" data-ext="php" data-title="php"><pre><code><span class="line"><span class="token string single-quoted-string">&#39;tree&#39;</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span></span>
<span class="line">    <span class="token string single-quoted-string">&#39;options&#39;</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span></span>
<span class="line">        <span class="token string single-quoted-string">&#39;allowed_operators&#39;</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span></span>
<span class="line">            <span class="token string single-quoted-string">&#39;eq&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;=&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;gt&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;&gt;&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;like&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;LIKE&#39;</span></span>
<span class="line">        <span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token string single-quoted-string">&#39;depth_limit&#39;</span> <span class="token operator">=&gt;</span> <span class="token number">5</span></span>
<span class="line">    <span class="token punctuation">]</span></span>
<span class="line"><span class="token punctuation">]</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><strong>Allowed Operators</strong>: Whitelist of permitted SQL operators</li><li><strong>Depth Limit</strong>: Maximum nesting levels for conditions</li></ul><h3 id="_6-3-ruleset-engine" tabindex="-1"><a class="header-anchor" href="#_6-3-ruleset-engine"><span>6.3 Ruleset Engine</span></a></h3><div class="language-php line-numbers-mode" data-highlighter="prismjs" data-ext="php" data-title="php"><pre><code><span class="line"><span class="token string single-quoted-string">&#39;ruleset&#39;</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span></span>
<span class="line">    <span class="token string single-quoted-string">&#39;options&#39;</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span></span>
<span class="line">        <span class="token string single-quoted-string">&#39;strict_mode&#39;</span> <span class="token operator">=&gt;</span> <span class="token constant boolean">false</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token string single-quoted-string">&#39;allowed_fields&#39;</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;id&#39;</span><span class="token punctuation">,</span><span class="token string single-quoted-string">&#39;name&#39;</span><span class="token punctuation">]</span></span>
<span class="line">    <span class="token punctuation">]</span></span>
<span class="line"><span class="token punctuation">]</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><strong>Strict Mode</strong>: Stop processing on first error</li><li><strong>Allowed Fields</strong>: Whitelist of filterable columns</li></ul><h3 id="_6-4-closure-pipeline-engine" tabindex="-1"><a class="header-anchor" href="#_6-4-closure-pipeline-engine"><span>6.4 Closure Pipeline Engine</span></a></h3><div class="language-php line-numbers-mode" data-highlighter="prismjs" data-ext="php" data-title="php"><pre><code><span class="line"><span class="token string single-quoted-string">&#39;closure_pipeline&#39;</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span></span>
<span class="line">    <span class="token string single-quoted-string">&#39;options&#39;</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span></span>
<span class="line">        <span class="token string single-quoted-string">&#39;middlewares&#39;</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span></span>
<span class="line">            <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token variable">$query</span><span class="token punctuation">,</span> <span class="token variable">$next</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">/* preprocessing */</span> <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">]</span></span>
<span class="line">    <span class="token punctuation">]</span></span>
<span class="line"><span class="token punctuation">]</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><strong>Middlewares</strong>: Array of closure-based preprocessing functions</li></ul><h3 id="_6-5-sql-expression-engine" tabindex="-1"><a class="header-anchor" href="#_6-5-sql-expression-engine"><span>6.5 SQL Expression Engine</span></a></h3><div class="language-php line-numbers-mode" data-highlighter="prismjs" data-ext="php" data-title="php"><pre><code><span class="line"><span class="token string single-quoted-string">&#39;expression&#39;</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span></span>
<span class="line">    <span class="token string single-quoted-string">&#39;options&#39;</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span></span>
<span class="line">        <span class="token string single-quoted-string">&#39;validate_columns&#39;</span> <span class="token operator">=&gt;</span> <span class="token constant boolean">true</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token string single-quoted-string">&#39;quote_values&#39;</span> <span class="token operator">=&gt;</span> <span class="token constant boolean">true</span></span>
<span class="line">    <span class="token punctuation">]</span></span>
<span class="line"><span class="token punctuation">]</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><strong>Validate Columns</strong>: Verify column existence in DB schema</li><li><strong>Quote Values</strong>: Automatic value escaping for SQL safety</li></ul><h2 id="_7-filters-mapping" tabindex="-1"><a class="header-anchor" href="#_7-filters-mapping"><span>7. Filters Mapping</span></a></h2><div class="language-php line-numbers-mode" data-highlighter="prismjs" data-ext="php" data-title="php"><pre><code><span class="line"><span class="token string single-quoted-string">&#39;mapping&#39;</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li><strong>Type</strong>: array</li><li><strong>Default</strong>: []</li><li><strong>Description</strong>: Manual model-to-filter class mapping (e.g. &#39;App\\Models\\User&#39; =&gt; &#39;App\\Filters\\AdminFilter&#39;).</li></ul><h2 id="_9-request-source" tabindex="-1"><a class="header-anchor" href="#_9-request-source"><span>9. Request Source</span></a></h2><div class="language-php line-numbers-mode" data-highlighter="prismjs" data-ext="php" data-title="php"><pre><code><span class="line"><span class="token string single-quoted-string">&#39;request_source&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;query&#39;</span><span class="token punctuation">,</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li><strong>Type</strong>: string</li><li><strong>Options</strong>: query, input, json</li><li><strong>Description</strong>: Determines where to extract filters from: <ul><li>query: URL parameters (?filter=)</li><li>input: Request body</li><li>json: JSON payload</li></ul></li></ul><h2 id="_10-empty-values-handling" tabindex="-1"><a class="header-anchor" href="#_10-empty-values-handling"><span>10. Empty Values Handling</span></a></h2><div class="language-php line-numbers-mode" data-highlighter="prismjs" data-ext="php" data-title="php"><pre><code><span class="line"><span class="token string single-quoted-string">&#39;allow_empty_values&#39;</span> <span class="token operator">=&gt;</span> <span class="token constant boolean">false</span><span class="token punctuation">,</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li><strong>Type</strong>: boolean</li><li><strong>Default</strong>: false</li><li><strong>Description</strong>: When disabled, filters with empty/null values are ignored.</li></ul><h2 id="_11-query-logging" tabindex="-1"><a class="header-anchor" href="#_11-query-logging"><span>11. Query Logging</span></a></h2><div class="language-php line-numbers-mode" data-highlighter="prismjs" data-ext="php" data-title="php"><pre><code><span class="line"><span class="token string single-quoted-string">&#39;log_queries&#39;</span> <span class="token operator">=&gt;</span> <span class="token constant boolean">false</span><span class="token punctuation">,</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li><strong>Type</strong>: boolean</li><li><strong>Default</strong>: false</li><li><strong>Description</strong>: Log all filter activities to Laravel&#39;s default log channel.</li></ul><h2 id="_12-filter-generation" tabindex="-1"><a class="header-anchor" href="#_12-filter-generation"><span>12. Filter Generation</span></a></h2><div class="language-php line-numbers-mode" data-highlighter="prismjs" data-ext="php" data-title="php"><pre><code><span class="line"><span class="token string single-quoted-string">&#39;save_filters_at&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;Http/Filters&#39;</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token string single-quoted-string">&#39;generator&#39;</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span></span>
<span class="line">  <span class="token string single-quoted-string">&#39;stub&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;vendor/.../filter.stub&#39;</span></span>
<span class="line"><span class="token punctuation">]</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><strong>Save Location</strong>: Directory for generated filters</li><li><strong>Custom Stub</strong>: Override default filter template</li></ul><h2 id="_13-pagination-limit" tabindex="-1"><a class="header-anchor" href="#_13-pagination-limit"><span>13. Pagination Limit</span></a></h2><div class="language-php line-numbers-mode" data-highlighter="prismjs" data-ext="php" data-title="php"><pre><code><span class="line"><span class="token string single-quoted-string">&#39;paginate_limit&#39;</span> <span class="token operator">=&gt;</span> <span class="token constant">null</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li><strong>Type</strong>: <code>integer|null</code></li><li><strong>Default</strong>: <code>null</code></li><li><strong>Description</strong>: Default items per page for <code>simplePaginate()</code> or <code>paginate()</code> method.</li></ul><h2 id="_14-header-driven-filter-mode" tabindex="-1"><a class="header-anchor" href="#_14-header-driven-filter-mode"><span>14. Header Driven Filter Mode</span></a></h2><h3 id="_14-1" tabindex="-1"><a class="header-anchor" href="#_14-1"><span>14.1</span></a></h3><ul><li><strong>Enable</strong>: When true, the package will check for the filter mode header and attempt to use the specified engine if valid.</li></ul>`,55)]))}const o=s(t,[["render",l],["__file","configurations.html.vue"]]),c=JSON.parse('{"path":"/configurations.html","title":"Filter Configuration Documentation","lang":"en-US","frontmatter":{"title":"Filter Configuration Documentation"},"headers":[{"level":2,"title":"1. Namespace Configuration","slug":"_1-namespace-configuration","link":"#_1-namespace-configuration","children":[]},{"level":2,"title":"2. Auto Registration","slug":"_2-auto-registration","link":"#_2-auto-registration","children":[]},{"level":2,"title":"3. Request Injection","slug":"_3-request-injection","link":"#_3-request-injection","children":[]},{"level":2,"title":"4. Default Engine","slug":"_4-default-engine","link":"#_4-default-engine","children":[]},{"level":2,"title":"5. Filter Key","slug":"_5-filter-key","link":"#_5-filter-key","children":[]},{"level":2,"title":"6. Filter Engines","slug":"_6-filter-engines","link":"#_6-filter-engines","children":[{"level":3,"title":"6.1 Dynamic Method Engine","slug":"_6-1-dynamic-method-engine","link":"#_6-1-dynamic-method-engine","children":[]},{"level":3,"title":"6.2 Tree Engine","slug":"_6-2-tree-engine","link":"#_6-2-tree-engine","children":[]},{"level":3,"title":"6.3 Ruleset Engine","slug":"_6-3-ruleset-engine","link":"#_6-3-ruleset-engine","children":[]},{"level":3,"title":"6.4 Closure Pipeline Engine","slug":"_6-4-closure-pipeline-engine","link":"#_6-4-closure-pipeline-engine","children":[]},{"level":3,"title":"6.5 SQL Expression Engine","slug":"_6-5-sql-expression-engine","link":"#_6-5-sql-expression-engine","children":[]}]},{"level":2,"title":"7. Filters Mapping","slug":"_7-filters-mapping","link":"#_7-filters-mapping","children":[]},{"level":2,"title":"9. Request Source","slug":"_9-request-source","link":"#_9-request-source","children":[]},{"level":2,"title":"10. Empty Values Handling","slug":"_10-empty-values-handling","link":"#_10-empty-values-handling","children":[]},{"level":2,"title":"11. Query Logging","slug":"_11-query-logging","link":"#_11-query-logging","children":[]},{"level":2,"title":"12. Filter Generation","slug":"_12-filter-generation","link":"#_12-filter-generation","children":[]},{"level":2,"title":"13. Pagination Limit","slug":"_13-pagination-limit","link":"#_13-pagination-limit","children":[]},{"level":2,"title":"14. Header Driven Filter Mode","slug":"_14-header-driven-filter-mode","link":"#_14-header-driven-filter-mode","children":[{"level":3,"title":"14.1","slug":"_14-1","link":"#_14-1","children":[]}]}],"git":{"updatedTime":1747728168000,"contributors":[{"name":"Abdalrhman Emad Saad","email":"a.emad@codeclouders.com","commits":1}]},"filePathRelative":"configurations.md"}');export{o as comp,c as data};
