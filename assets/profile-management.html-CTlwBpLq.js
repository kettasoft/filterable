import{_ as s,c as a,a as e,o as t}from"./app-o4hQ8xdO.js";const p={};function l(i,n){return t(),a("div",null,n[0]||(n[0]=[e(`<h1 id="profile-management" tabindex="-1"><a class="header-anchor" href="#profile-management"><span>Profile Management</span></a></h1><p>The Filter Profiles feature allows you to dynamically apply preconfigured filtering behaviors or settings based on context â€” such as user role, environment, or custom conditions. Profiles act as reusable configurations for your filters, improving maintainability and flexibility.</p><h2 id="introduction" tabindex="-1"><a class="header-anchor" href="#introduction"><span>Introduction</span></a></h2><p>A <strong>Filterable</strong> Profile defines how a <code>Filterable</code> instance should behave in a specific context.</p><p>Instead of writing conditional logic inside filters, you can encapsulate environment- or role-specific settings into separate, reusable profiles.</p><h3 id="example" tabindex="-1"><a class="header-anchor" href="#example"><span>Example:</span></a></h3><p>You can have different filtering rules for:</p><ul><li>Admin users (see all data)</li><li>Regular users (see limited data)</li><li>Guest users (see only public data)</li><li>Managers (department-specific filters)</li></ul><h2 id="defining-profiles" tabindex="-1"><a class="header-anchor" href="#defining-profiles"><span>Defining Profiles</span></a></h2><p>Profiles can be defined as:</p><ul><li>A dedicated class implementing <code>FilterableProfile</code> interface</li><li>A callable function</li><li>A string reference from your config file</li></ul><h3 id="example-using-a-profile-class" tabindex="-1"><a class="header-anchor" href="#example-using-a-profile-class"><span>Example: Using a Profile Class</span></a></h3><div class="language-php line-numbers-mode" data-highlighter="prismjs" data-ext="php" data-title="php"><pre><code><span class="line"><span class="token keyword">use</span> <span class="token package">Kettasoft<span class="token punctuation">\\</span>Filterable<span class="token punctuation">\\</span>Contracts<span class="token punctuation">\\</span>FilterableProfile</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">use</span> <span class="token package">Kettasoft<span class="token punctuation">\\</span>Filterable<span class="token punctuation">\\</span>Filterable</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">class</span> <span class="token class-name-definition class-name">AdminProfile</span> <span class="token keyword">implements</span> <span class="token class-name">FilterableProfile</span></span>
<span class="line"><span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__invoke</span><span class="token punctuation">(</span><span class="token class-name type-declaration">Filterable</span> <span class="token variable">$filterable</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword return-type">void</span></span>
<span class="line">    <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token variable">$filterable</span></span>
<span class="line">            <span class="token operator">-&gt;</span><span class="token function">allowedFilters</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;*&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">// Allow all filters</span></span>
<span class="line">            <span class="token operator">-&gt;</span><span class="token function">strict</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Enforce strict filtering</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="using-profiles" tabindex="-1"><a class="header-anchor" href="#using-profiles"><span>Using Profiles</span></a></h2><p>Apply a profile directly to a filter instance:</p><div class="language-php line-numbers-mode" data-highlighter="prismjs" data-ext="php" data-title="php"><pre><code><span class="line"><span class="token class-name static-context">PostFilter</span><span class="token operator">::</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token operator">-&gt;</span><span class="token function">useProfile</span><span class="token punctuation">(</span><span class="token class-name static-context">AdminProfile</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token operator">-&gt;</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token variable">$builder</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token operator">-&gt;</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Or use a callable:</p><div class="language-php line-numbers-mode" data-highlighter="prismjs" data-ext="php" data-title="php"><pre><code><span class="line"><span class="token class-name static-context">PostFilter</span><span class="token operator">::</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token operator">-&gt;</span><span class="token function">useProfile</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token class-name type-declaration">Filterable</span> <span class="token variable">$filterable</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token variable">$filterable</span></span>
<span class="line">            <span class="token operator">-&gt;</span><span class="token function">allowedFilters</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;status&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;category&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token operator">-&gt;</span><span class="token function">defaultSort</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;created_at&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token operator">-&gt;</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token variable">$builder</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token operator">-&gt;</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Or use a profile key registered in your configuration:</p><div class="language-php line-numbers-mode" data-highlighter="prismjs" data-ext="php" data-title="php"><pre><code><span class="line"><span class="token comment">// config/filterable.php</span></span>
<span class="line"><span class="token string single-quoted-string">&#39;profiles&#39;</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span></span>
<span class="line">    <span class="token string single-quoted-string">&#39;admin&#39;</span> <span class="token operator">=&gt;</span> <span class="token class-name class-name-fully-qualified static-context">App<span class="token punctuation">\\</span>FilterProfiles<span class="token punctuation">\\</span>AdminProfile</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string single-quoted-string">&#39;user&#39;</span> <span class="token operator">=&gt;</span> <span class="token class-name class-name-fully-qualified static-context">App<span class="token punctuation">\\</span>FilterProfiles<span class="token punctuation">\\</span>UserProfile</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Then apply it:</p><div class="language-php line-numbers-mode" data-highlighter="prismjs" data-ext="php" data-title="php"><pre><code><span class="line"><span class="token class-name static-context">PostFilter</span><span class="token operator">::</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token operator">-&gt;</span><span class="token function">useProfile</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;admin&#39;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token operator">-&gt;</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token variable">$builder</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token operator">-&gt;</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="configuration" tabindex="-1"><a class="header-anchor" href="#configuration"><span>Configuration</span></a></h2><p>In your <code>config/filterable.php</code>:</p><div class="language-php line-numbers-mode" data-highlighter="prismjs" data-ext="php" data-title="php"><pre><code><span class="line"><span class="token string single-quoted-string">&#39;profiles&#39;</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span></span>
<span class="line">    <span class="token string single-quoted-string">&#39;admin&#39;</span> <span class="token operator">=&gt;</span> <span class="token class-name class-name-fully-qualified static-context">App<span class="token punctuation">\\</span>FilterProfiles<span class="token punctuation">\\</span>AdminProfile</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string single-quoted-string">&#39;user&#39;</span>  <span class="token operator">=&gt;</span> <span class="token class-name class-name-fully-qualified static-context">App<span class="token punctuation">\\</span>FilterProfiles<span class="token punctuation">\\</span>UserProfile</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string single-quoted-string">&#39;guest&#39;</span> <span class="token operator">=&gt;</span> <span class="token keyword">fn</span><span class="token punctuation">(</span><span class="token variable">$filterable</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token variable">$filterable</span><span class="token operator">-&gt;</span><span class="token function">strict</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Each entry can be:</p><ul><li>A class name implementing <code>FilterableProfile</code></li><li>A callable function</li><li>A class name string</li></ul><h2 id="use-cases" tabindex="-1"><a class="header-anchor" href="#use-cases"><span>Use Cases</span></a></h2><ul><li><strong>Role-Based Filtering</strong>: Different profiles for different user roles.</li><li><strong>Environment-Specific Behavior</strong>: Different profiles for development, staging, and production.</li></ul><h3 id="_1-role-based-filtering" tabindex="-1"><a class="header-anchor" href="#_1-role-based-filtering"><span>1. Role-based Filtering</span></a></h3><div class="language-php line-numbers-mode" data-highlighter="prismjs" data-ext="php" data-title="php"><pre><code><span class="line"><span class="token variable">$user</span> <span class="token operator">=</span> <span class="token function">auth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">user</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token variable">$filter</span> <span class="token operator">=</span> <span class="token class-name static-context">PostFilter</span><span class="token operator">::</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token operator">-&gt;</span><span class="token function">useProfile</span><span class="token punctuation">(</span><span class="token keyword">match</span> <span class="token punctuation">(</span><span class="token variable">$user</span><span class="token operator">-&gt;</span><span class="token property">role</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token string single-quoted-string">&#39;admin&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;admin&#39;</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token string single-quoted-string">&#39;manager&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;manager&#39;</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token keyword">default</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;user&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token operator">-&gt;</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token variable">$builder</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-environment-specific-behavior" tabindex="-1"><a class="header-anchor" href="#_2-environment-specific-behavior"><span>2. Environment-specific Behavior</span></a></h3><div class="language-php line-numbers-mode" data-highlighter="prismjs" data-ext="php" data-title="php"><pre><code><span class="line"><span class="token variable">$environment</span> <span class="token operator">=</span> <span class="token function">app</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">environment</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;production&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name static-context">PostFilter</span><span class="token operator">::</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token operator">-&gt;</span><span class="token function">useProfile</span><span class="token punctuation">(</span><span class="token variable">$environment</span> <span class="token operator">?</span> <span class="token string single-quoted-string">&#39;production&#39;</span> <span class="token punctuation">:</span> <span class="token string single-quoted-string">&#39;debug&#39;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token operator">-&gt;</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="api-reference" tabindex="-1"><a class="header-anchor" href="#api-reference"><span>API Reference</span></a></h2><h3 id="useprofile-filterableprofile-callable-string-profile-static" tabindex="-1"><a class="header-anchor" href="#useprofile-filterableprofile-callable-string-profile-static"><span><code>useProfile(FilterableProfile|callable|string $profile): static</code></span></a></h3><p>Apply a filter profile to the current filterable instance.</p><ul><li><strong>Parameters</strong>: <ul><li><code>FilterableProfile|callable|string $profile</code>: The profile to apply.</li></ul></li><li><strong>Returns</strong>: <code>static</code> - The current filterable instance.</li></ul><p>Example:</p><div class="language-php line-numbers-mode" data-highlighter="prismjs" data-ext="php" data-title="php"><pre><code><span class="line"><span class="token class-name static-context">PostFilter</span><span class="token operator">::</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">useProfile</span><span class="token punctuation">(</span><span class="token class-name static-context">AdminProfile</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token variable">$builder</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="conclusion" tabindex="-1"><a class="header-anchor" href="#conclusion"><span>Conclusion</span></a></h2><p>Filter Profiles enhance the flexibility and maintainability of your filtering logic by encapsulating context-specific behaviors into reusable configurations. By leveraging profiles, you can easily adapt filtering rules based on user roles, environments, or other conditions without cluttering your filter implementations.</p>`,41)]))}const c=s(p,[["render",l],["__file","profile-management.html.vue"]]),r=JSON.parse('{"path":"/profile-management.html","title":"Profile Management","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"Introduction","slug":"introduction","link":"#introduction","children":[{"level":3,"title":"Example:","slug":"example","link":"#example","children":[]}]},{"level":2,"title":"Defining Profiles","slug":"defining-profiles","link":"#defining-profiles","children":[{"level":3,"title":"Example: Using a Profile Class","slug":"example-using-a-profile-class","link":"#example-using-a-profile-class","children":[]}]},{"level":2,"title":"Using Profiles","slug":"using-profiles","link":"#using-profiles","children":[]},{"level":2,"title":"Configuration","slug":"configuration","link":"#configuration","children":[]},{"level":2,"title":"Use Cases","slug":"use-cases","link":"#use-cases","children":[{"level":3,"title":"1. Role-based Filtering","slug":"_1-role-based-filtering","link":"#_1-role-based-filtering","children":[]},{"level":3,"title":"2. Environment-specific Behavior","slug":"_2-environment-specific-behavior","link":"#_2-environment-specific-behavior","children":[]}]},{"level":2,"title":"API Reference","slug":"api-reference","link":"#api-reference","children":[{"level":3,"title":"useProfile(FilterableProfile|callable|string $profile): static","slug":"useprofile-filterableprofile-callable-string-profile-static","link":"#useprofile-filterableprofile-callable-string-profile-static","children":[]}]},{"level":2,"title":"Conclusion","slug":"conclusion","link":"#conclusion","children":[]}],"git":{"updatedTime":1760888841000,"contributors":[{"name":"kettasoft","email":"kettasoft@gmail.com","commits":1}]},"filePathRelative":"profile-management.md"}');export{c as comp,r as data};
