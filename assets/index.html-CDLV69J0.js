import{_ as n,c as a,a as s,o as t}from"./app-BzrB1Tdi.js";const i={};function l(o,e){return t(),a("div",null,e[0]||(e[0]=[s(`<p>This is the content of home page. Check <a href="/introduction" target="_blank" rel="noopener noreferrer">Home Page Docs</a> for more details.</p><h2 id="📚-use-cases" tabindex="-1"><a class="header-anchor" href="#📚-use-cases"><span>📚 Use Cases</span></a></h2><ul><li>Build complex dashboards with advanced filtering capabilities.</li><li>Create public APIs with strict control over what fields can be queried.</li><li>Support admin panels that need custom filtering rules per user role.</li><li>Handle dynamic filtering for search pages or reports.</li></ul><h2 id="🔧-example-use" tabindex="-1"><a class="header-anchor" href="#🔧-example-use"><span>🔧 Example Use</span></a></h2><div class="language-php line-numbers-mode" data-highlighter="prismjs" data-ext="php" data-title="php"><pre><code><span class="line"><span class="token class-name static-context">Filterable</span><span class="token operator">::</span><span class="token function">withRequest</span><span class="token punctuation">(</span><span class="token variable">$request</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token operator">-&gt;</span><span class="token function">useEngine</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;ruleset&#39;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token operator">-&gt;</span><span class="token function">setAllowedFields</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;status&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;title&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;author.name&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token operator">-&gt;</span><span class="token function">setRelations</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;author&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token operator">-&gt;</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token class-name static-context">Post</span><span class="token operator">::</span><span class="token function">query</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="🧪-tested-production-ready" tabindex="-1"><a class="header-anchor" href="#🧪-tested-production-ready"><span>🧪 Tested &amp; Production-Ready</span></a></h2><p>Filterable is heavily tested and battle-proven in real-world applications, ensuring stability and reliability even with large datasets and complex filters.</p><h2 id="💡-extending-the-package" tabindex="-1"><a class="header-anchor" href="#💡-extending-the-package"><span>💡 Extending the Package</span></a></h2><p>Need a custom engine? Simply extends the <code>Engine</code> abstract class and register it — the system is built for extension and customization.</p>`,9)]))}const r=n(i,[["render",l],["__file","index.html.vue"]]),c=JSON.parse('{"path":"/","title":"Home","lang":"en-US","frontmatter":{"home":true,"title":"Home","heroImage":"/images/logo.png","actions":[{"text":"Introduction","link":"/introduction","type":"primary"},{"text":"Installation","link":"installation","type":"secondary"}],"features":[{"title":"⚙️ Multiple Filtering Engines","details":"Support different filtering strategies like RuleSet, Tree-Based, Dynamic Methods, and SQL Expressions — all pluggable and extensible."},{"title":"🧩 Clean, Decoupled Architecture","details":"Built with SOLID principles in mind. Easily swap or extend engines without touching core logic."},{"title":"🧼 Customizable Filter Sanitizers","details":"Apply custom sanitization and validation logic for every input field or filter operator."},{"title":"🔗 Relation & Nested Filters Support","details":"Filter through deep nested relationships with controlled access and relation depth to preserve performance and security."},{"title":"🧠 Intelligent Field Management","details":"Define allowed fields, nested relations, and control exactly what’s queryable in each context."},{"title":"🚀 Plug & Play Integration","details":"Works seamlessly with any Laravel query builder. Minimal setup required to get started."}],"footer":"MIT Licensed | Copyright © 2024-present Kettasoft"},"headers":[{"level":2,"title":"📚 Use Cases","slug":"📚-use-cases","link":"#📚-use-cases","children":[]},{"level":2,"title":"🔧 Example Use","slug":"🔧-example-use","link":"#🔧-example-use","children":[]},{"level":2,"title":"🧪 Tested & Production-Ready","slug":"🧪-tested-production-ready","link":"#🧪-tested-production-ready","children":[]},{"level":2,"title":"💡 Extending the Package","slug":"💡-extending-the-package","link":"#💡-extending-the-package","children":[]}],"git":{"updatedTime":1748622923000,"contributors":[{"name":"Abdalrhman Emad Saad","email":"a.emad@codeclouders.com","commits":4}]},"filePathRelative":"README.md"}');export{r as comp,c as data};
