import{_ as s,c as t,a,o as n}from"./app-BzrB1Tdi.js";const l={};function i(r,e){return n(),t("div",null,e[0]||(e[0]=[a(`<h1 id="testing-filters" tabindex="-1"><a class="header-anchor" href="#testing-filters"><span>Testing Filters</span></a></h1><h3 id="purpose" tabindex="-1"><a class="header-anchor" href="#purpose"><span><strong>Purpose</strong></span></a></h3><p>The <code>filterable:test</code> command allows you to test and debug filter classes directly from the command line. It applies the specified filter on a given model and displays the resulting SQL query, helping you verify that your filters behave as expected.</p><hr><h3 id="usage" tabindex="-1"><a class="header-anchor" href="#usage"><span><strong>Usage</strong></span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">php artisan filterable:test <span class="token punctuation">{</span>filter<span class="token punctuation">}</span> <span class="token parameter variable">--model</span><span class="token operator">=</span>User <span class="token parameter variable">--data</span><span class="token operator">=</span><span class="token string">&quot;status=active,age=30&quot;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><hr><h3 id="arguments" tabindex="-1"><a class="header-anchor" href="#arguments"><span><strong>Arguments</strong></span></a></h3><table><thead><tr><th>Name</th><th>Description</th><th>Required</th></tr></thead><tbody><tr><td><code>filter</code></td><td>The name of the filter class (e.g., <code>UserFilter</code>). It must exist in your configured filter namespace.</td><td>‚úÖ Yes</td></tr></tbody></table><hr><h3 id="options" tabindex="-1"><a class="header-anchor" href="#options"><span><strong>Options</strong></span></a></h3><table><thead><tr><th>Option</th><th>Description</th><th>Example</th></tr></thead><tbody><tr><td><code>--model</code></td><td>The Eloquent model class to apply the filter on. Defaults to <code>App\\Models\\{ModelName}</code> if not fully qualified.</td><td><code>--model=User</code></td></tr><tr><td><code>--data</code></td><td>A comma-separated list of filter key-value pairs to simulate a filter input.</td><td><code>--data=&quot;status=active,age=30&quot;</code></td></tr></tbody></table><hr><h3 id="example" tabindex="-1"><a class="header-anchor" href="#example"><span><strong>Example</strong></span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">php artisan filterable:test UserFilter <span class="token parameter variable">--model</span><span class="token operator">=</span>User <span class="token parameter variable">--data</span><span class="token operator">=</span><span class="token string">&quot;status=active,age=30&quot;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>Output:</strong></p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">üîç Testing filter: App\\Http\\Filters\\UserFilter</span>
<span class="line">üß© Model: App\\Models\\User</span>
<span class="line"></span>
<span class="line">Applied filters:</span>
<span class="line">  ‚Ä¢ status = active</span>
<span class="line">  ‚Ä¢ age = 30</span>
<span class="line"></span>
<span class="line">‚úÖ Query:</span>
<span class="line">select * from &quot;users&quot; where &quot;status&quot; = &#39;active&#39; and &quot;age&quot; = 30;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h3 id="how-it-works" tabindex="-1"><a class="header-anchor" href="#how-it-works"><span><strong>How It Works</strong></span></a></h3><ol><li>The command resolves your filter class from the configured namespace (<code>filterable.filter_namespace</code>).</li><li>It instantiates the model and builds an Eloquent query.</li><li>The filter is applied to that query using its <code>apply()</code> method.</li><li>The resulting SQL query is displayed in the console.</li></ol>`,20)]))}const d=s(l,[["render",i],["__file","testing.html.vue"]]),p=JSON.parse('{"path":"/cli/testing.html","title":"Testing Filters","lang":"en-US","frontmatter":{},"headers":[{"level":3,"title":"Purpose","slug":"purpose","link":"#purpose","children":[]},{"level":3,"title":"Usage","slug":"usage","link":"#usage","children":[]},{"level":3,"title":"Arguments","slug":"arguments","link":"#arguments","children":[]},{"level":3,"title":"Options","slug":"options","link":"#options","children":[]},{"level":3,"title":"Example","slug":"example","link":"#example","children":[]},{"level":3,"title":"How It Works","slug":"how-it-works","link":"#how-it-works","children":[]}],"git":{"updatedTime":1761371878000,"contributors":[{"name":"kettasoft","email":"kettasoft@gmail.com","commits":1}]},"filePathRelative":"cli/testing.md"}');export{d as comp,p as data};
